class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int> v;
        stack<int> s;
        for(int i=nums2.size()-1;i>=0;i--){
            if(s.size() == 0){
                v.push_back(-1);
            }
            else if(s.size() > 0 && s.top() > nums2[i]){
                v.push_back(s.top());
            }
            else if(s.size() > 0 && s.top() <= nums2[i]){
                while(s.size() > 0 && s.top() <= nums2[i]){
                    s.pop();
                }
                if(s.size() == 0){
                    v.push_back(-1);
                }
                else{
                    v.push_back(s.top());
                }
            }
            s.push(nums2[i]);
        }
        reverse(v.begin(), v.end());
        map<int, int> m;
        for(int i=0;i<v.size();i++){
            m.insert({nums2[i], v[i]});
        }
    //     for (auto itr = m.begin(); itr != m.end(); ++itr) {
    //     cout << itr->first
    //          << '\t' << itr->second << '\n';
    // }
        vector<int> res;
        for(int i=0;i<nums1.size();i++){
            res.push_back(m[nums1[i]]);
        }
        return res;
    }
};
